name: Build

on: [pull_request, push]

env:
  API_VERSION: 31
  JAVA_VERSION: 11

# Where will they run
jobs:
   build:
      runs-on: macos-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v2.3.3

      - name: Set up our JDK environment
        uses: actions/setup-java@v1.4.3
        with:
           java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Run Kotlin Linter
        run: ./gradlew lint

      - name: Run Unit Tests
        uses: eskatos/gradle-command-action@v1.3.3
        with:
            gradle-version: current
            wrapper-cache-enabled: true
            dependencies-cache-enabled: true
            configuration-cache-enabled: true
            arguments: test

      - name: Build all artifacts
        id: buildAllApks
        uses: eskatos/gradle-command-action@v1.3.3
        with:
           gradle-version: current
           wrapper-cache-enabled: true
           dependencies-cache-enabled: true
           configuration-cache-enabled: true
           arguments: assembleRelease

      - name: Restore Android virtual device
        id: avd-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
         key: avd-android${{ env.API_VERSION }}

      - name: Download and install JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set up Android virtual device if not cached
        uses: reactivecircus/android-emulator-runner@v2
        if: steps.avd-cache.outputs.cache-hit != 'true'
        with:
          api-level: ${{ env.API_VERSION }}
          arch: x86_64
          target: ${{ env.API_VERSION >= 30 && 'google_apis' || 'default' }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run instrumented tests on Android virtual device
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ env.API_VERSION }}
          arch: x86_64
          target: ${{ env.API_VERSION >= 30 && 'google_apis' || 'default' }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedAndroidTest --stacktrace

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
            api-level: ${{ env.API_VERSION }}
            force-avd-creation: false
            emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
            emulator-build: 7425822
            disable-animations: false
            script: echo "Generated AVD snapshot for caching."

      - name: Run tests on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
           api-level: ${{ env.API_VERSION }}
           force-avd-creation: false
           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
           disable-animations: true
           script: ./gradlew connectedAndroidTest --stacktrace

## Sign our artifact##
#     - name: Sign artifact
#       id: signArtifact
#       uses: r0adkll/sign-android-release@v1.0.1
#       with:
#          releaseDirectory: app/build/outputs/apk/ourbuildtype/release
#          alias: ${{ secrets.KEYALIAS }}
#          signingKeyBase64: ${{ secrets.KEYSTORE }}
#          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#
#     - name: Upload our APK
#       uses: actions/upload-artifact@v2.2.0
#       with:
#          name: Release artifact
#          path: app/build/outputs/apk/ourbuildtype/release/app-artifact-*.apk
