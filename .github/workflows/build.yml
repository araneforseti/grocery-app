name: Build

on:
  pull_request: 
  push:
    branches:
      - master

env:
  API_VERSION: 31
  JAVA_VERSION: 11

# Where will they run
jobs:
   lint:
      runs-on: macos-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v3.0.2

      - name: Set up our JDK environment
        uses: actions/setup-java@v3.3.0
        with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}

      - name: Gradle cache
        uses: gradle/gradle-build-action@v2

      - name: Run Kotlin Linter
        run: ./gradlew lint

   unit:
     runs-on: macos-latest

     steps:
       - name: Checkout
         uses: actions/checkout@v3.0.2

       - name: Set up our JDK environment
         uses: actions/setup-java@v3.3.0
         with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}

       - name: Gradle cache
         uses: gradle/gradle-build-action@v2

       - name: Run Unit Tests
         uses: eskatos/gradle-command-action@v2.1.6
         with:
           gradle-version: current
           wrapper-cache-enabled: true
           dependencies-cache-enabled: true
           configuration-cache-enabled: true
           arguments: test

   instrumented:
     runs-on: macos-latest

     steps:
       - name: Checkout
         uses: actions/checkout@v3.0.2

       - name: Set up our JDK environment
         uses: actions/setup-java@v3.3.0
         with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}

       - name: Gradle cache
         uses: gradle/gradle-build-action@v2

       - name: Set up Android virtual device
         uses: reactivecircus/android-emulator-runner@v2
         with:
           api-level: ${{ env.API_VERSION }}
           arch: x86_64
           target: ${{ env.API_VERSION >= 30 && 'google_apis' || 'default' }}
           force-avd-creation: false
           emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
           disable-animations: false
           script: echo "Generated AVD snapshot for caching."

       - name: Run instrumented tests on Android virtual device
         uses: reactivecircus/android-emulator-runner@v2
         with:
           api-level: ${{ env.API_VERSION }}
           arch: x86_64
           target: 'default'
           force-avd-creation: false
           emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
           disable-animations: true
           script: ./gradlew connectedAndroidTest --stacktrace

   build:
     runs-on: macos-latest
     needs: [lint, unit, instrumented]
     steps:
       - name: Checkout
         uses: actions/checkout@v3.0.2

       - name: Set up our JDK environment
         uses: actions/setup-java@v3.3.0
         with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}

       - name: Gradle cache
         uses: gradle/gradle-build-action@v2

       - name: Build apk
         id: buildApk
         run: bash ./gradlew assembleDebug --

       - name: Upload our APK
         uses: actions/upload-artifact@v2.2.0
         with:
           name: apk
           path: app/build/outputs/apk/debug/app-*.apk

   release:
     name: Uploads artifact to release
     needs: build
     runs-on: ubuntu-latest
     steps:
       - name: Decode Keystore
         env:
           ENCODED_STRING: ${{ secrets.SIGNINGKEYBASE64 }}
         run: |
           TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}"/keystore
           mkdir "${TMP_KEYSTORE_FILE_PATH}"
           echo $ENCODED_STRING | base64 -di > "${TMP_KEYSTORE_FILE_PATH}"/your_keystore_file.jks

       - name: Checkout
         uses: actions/checkout@v3.0.2

       - name: Set up our JDK environment
         uses: actions/setup-java@v3.3.0
         with:
           distribution: 'temurin'
           java-version: ${{ env.JAVA_VERSION }}

       - name: Make gradlew executable
         run: chmod +x ./gradlew

       - name: build prod
         run: ./gradlew app:bundleRelease
         env:
           SIGNING_KEY_ALIAS: ${{ secrets.ALIAS }}
           SIGNING_KEY_PASSWORD: ${{ secrets.KEYPASSWORD }}
           SIGNING_STORE_PASSWORD: ${{ secrets.KEYSTOREPASSWORD }}

       - name: Save Artifact
         uses: actions/upload-artifact@v3
         with:
           name: signed-artifact
           path: app/build/outputs
           if-no-files-found: error

       - name: Upload as Release
         uses: ncipollo/release-action@v1
         with:
           artifacts: "app/build/outputs/*.apk"
           tag: "candidate"
           allowUpdates: true
           name: release-${{ github.sha }}